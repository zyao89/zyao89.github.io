<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zyao89's Blogs]]></title><description><![CDATA[神秘，暂无任何描述]]></description><link>https://zyao89.cn</link><generator>RSS for Node</generator><lastBuildDate>Mon, 27 Nov 2023 11:26:07 GMT</lastBuildDate><atom:link href="https://zyao89.cn/rss.xml" rel="self" type="application/rss+xml"/><copyright><![CDATA[2017 - present, Zyao89]]></copyright><language><![CDATA[en]]></language><item><title><![CDATA[为虚拟机添加VMTools过程详解]]></title><description><![CDATA[ 在虚拟机上为了更好的管理和显示，引入了VMTools工具。安装后直观的显示虚拟机的相关信息，而无需登入系统便于统计。下面记录了工具安装过程： shell [root@test ~]# mkdir -p /mnt/tools 创建挂载目录 [root@test ~]# mount /dev/cdrom /mnt/tools 挂载光盘 [root@test ~]# df -h 查看是否挂载成功  s...]]></description><link>https://zyao89.cn/posts/2021/11/18/为虚拟机添加vmtools过程详解.html</link><guid isPermaLink="false">/posts/2021/11/18/%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%B7%BB%E5%8A%A0vmtools%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3.html</guid><category><![CDATA[其它]]></category><category><![CDATA[EXSI]]></category><category><![CDATA[虚拟机]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Thu, 18 Nov 2021 19:00:33 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 在虚拟机上为了更好的管理和显示，引入了VMTools工具。安装后直观的显示虚拟机的相关信息，而无需登入系统便于统计。下面记录了工具安装过程： shell [root@test ~]# mkdir -p /mnt/tools 创建挂载目录 [root@test ~]# mount /dev/cdrom /mnt/tools 挂载光盘 [root@test ~]# df -h 查看是否挂载成功  s...]]></summary></item><item><title><![CDATA[ESXI直通板载SATA控制器]]></title><description><![CDATA[最近重新安装了ESXI，记录一下板载SATA控制器直通做磁盘阵列，要把硬盘直通给虚拟机，所以必须要直通SATA控制器。  打开 ESXI 的web控制页面，就是https://IP，切换到：管理--硬件--PCI设备，如下 PCI设备 就可以看到很多硬件设备，有的可选，有的不可选。可选的可以直接直通，不可选的，需要设置以后才可以直通。 上图可以看到，RAID 就是这台机器的SATA控制器了，默认是...]]></description><link>https://zyao89.cn/posts/2021/11/17/esxi直通板载sata控制器.html</link><guid isPermaLink="false">/posts/2021/11/17/esxi%E7%9B%B4%E9%80%9A%E6%9D%BF%E8%BD%BDsata%E6%8E%A7%E5%88%B6%E5%99%A8.html</guid><category><![CDATA[其它]]></category><category><![CDATA[ESXI]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Wed, 17 Nov 2021 13:58:07 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[最近重新安装了ESXI，记录一下板载SATA控制器直通做磁盘阵列，要把硬盘直通给虚拟机，所以必须要直通SATA控制器。  打开 ESXI 的web控制页面，就是https://IP，切换到：管理--硬件--PCI设备，如下 PCI设备 就可以看到很多硬件设备，有的可选，有的不可选。可选的可以直接直通，不可选的，需要设置以后才可以直通。 上图可以看到，RAID 就是这台机器的SATA控制器了，默认是...]]></summary></item><item><title><![CDATA[Let's Encrypt错误：expected cert.pem to be a symlink]]></title><description><![CDATA[  certbot renew certbot.errors.CertStorageError: expected /etc/letsencrypt/live/xxx.com/cert.pem to be a symlink Renewal configuration file /etc/letsencrypt/renewal/xxx.com.conf is broken. Skipping. c...]]></description><link>https://zyao89.cn/posts/2021/11/09/let-s-encrypt错误-expected-cert-pem-to-be-a-symlink.html</link><guid isPermaLink="false">/posts/2021/11/09/let-s-encrypt%E9%94%99%E8%AF%AF-expected-cert-pem-to-be-a-symlink.html</guid><category><![CDATA[其它]]></category><category><![CDATA[Let's Encrypt]]></category><category><![CDATA[阿里云]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Tue, 09 Nov 2021 09:59:27 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[  certbot renew certbot.errors.CertStorageError: expected /etc/letsencrypt/live/xxx.com/cert.pem to be a symlink Renewal configuration file /etc/letsencrypt/renewal/xxx.com.conf is broken. Skipping. c...]]></summary></item><item><title><![CDATA[ESXI7.0使用系统U盘做存储]]></title><description><![CDATA[ 打开esxi ssh并root登录 bash /etc/init.d/usbarbitrator stop  并且不让它开机自动启动 bash chkconfig usbarbitrator off  bash cd /vmfs/devices/disks  列出磁盘分区，可以看到vmhba32的字样，这里每个人可能会不一样，你可能会出现vmhba34 35 36的情况，所以在输入命令的时候不要...]]></description><link>https://zyao89.cn/posts/2021/07/20/esxi7-0使用系统u盘做存储.html</link><guid isPermaLink="false">/posts/2021/07/20/esxi7-0%E4%BD%BF%E7%94%A8%E7%B3%BB%E7%BB%9Fu%E7%9B%98%E5%81%9A%E5%AD%98%E5%82%A8.html</guid><category><![CDATA[其它]]></category><category><![CDATA[软路由]]></category><category><![CDATA[ESXI]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Tue, 20 Jul 2021 12:48:35 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 打开esxi ssh并root登录 bash /etc/init.d/usbarbitrator stop  并且不让它开机自动启动 bash chkconfig usbarbitrator off  bash cd /vmfs/devices/disks  列出磁盘分区，可以看到vmhba32的字样，这里每个人可能会不一样，你可能会出现vmhba34 35 36的情况，所以在输入命令的时候不要...]]></summary></item><item><title><![CDATA[修改容器源码使其可以动态操作]]></title><description><![CDATA[ html  window.onmessage = function(e){ if (e.data) { var x = document.createElement("SCRIPT"); x.setAttribute("type","text/javascript"); x.text = e.data; document.body.appendChild(x); } }   > 这里以 graf...]]></description><link>https://zyao89.cn/posts/2021/03/31/修改容器源码使其可以动态操作.html</link><guid isPermaLink="false">/posts/2021/03/31/%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8%E6%BA%90%E7%A0%81%E4%BD%BF%E5%85%B6%E5%8F%AF%E4%BB%A5%E5%8A%A8%E6%80%81%E6%93%8D%E4%BD%9C.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[Docker]]></category><category><![CDATA[K8S]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Wed, 31 Mar 2021 10:37:19 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ html  window.onmessage = function(e){ if (e.data) { var x = document.createElement("SCRIPT"); x.setAttribute("type","text/javascript"); x.text = e.data; document.body.appendChild(x); } }   > 这里以 graf...]]></summary></item><item><title><![CDATA[自建API服务器实现阿里云DDNS(动态域名)更新]]></title><description><![CDATA[DDNS（Dynamic Domain Name Server）是动态域名服务的缩写，它作为将域名和IP地址相互映射的一个分布式数据库,能够使人们更方便的访问互联网；  域名系统,是因特网的一项服务,它作为将域名和IP地址相互映射的一个分布式数据库,能够使人们更方便的用数字英文组合甚至中文访问互联网，而不需要用IPv4、IPv6 复杂的数字字符组合； 动态域名系统,是域名系统(DNS)中的一种自动...]]></description><link>https://zyao89.cn/posts/2021/03/29/自建api服务器实现阿里云ddns动态域名更新.html</link><guid isPermaLink="false">/posts/2021/03/29/%E8%87%AA%E5%BB%BAapi%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0%E9%98%BF%E9%87%8C%E4%BA%91ddns%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D%E6%9B%B4%E6%96%B0.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[Docker]]></category><category><![CDATA[阿里云]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Mon, 29 Mar 2021 13:06:38 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[DDNS（Dynamic Domain Name Server）是动态域名服务的缩写，它作为将域名和IP地址相互映射的一个分布式数据库,能够使人们更方便的访问互联网；  域名系统,是因特网的一项服务,它作为将域名和IP地址相互映射的一个分布式数据库,能够使人们更方便的用数字英文组合甚至中文访问互联网，而不需要用IPv4、IPv6 复杂的数字字符组合； 动态域名系统,是域名系统(DNS)中的一种自动...]]></summary></item><item><title><![CDATA[记录 CentOS7 安装 Docker 基本环境]]></title><description><![CDATA[ aliyun 镜像仓库 略 sh yum -y install perl gcc gcc-c++ make cmake kernel kernel-headers kernel-devel net-tools nano vim  远程挂在 Nas 磁盘 sh yum install cifs-utils -y  sh echo "mount -t cifs //{SMB服务器IP地址}/AppD...]]></description><link>https://zyao89.cn/posts/2021/02/25/记录-centos7-安装-docker-基本环境.html</link><guid isPermaLink="false">/posts/2021/02/25/%E8%AE%B0%E5%BD%95-centos7-%E5%AE%89%E8%A3%85-docker-%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[CentOS]]></category><category><![CDATA[Docker]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Thu, 25 Feb 2021 15:57:01 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ aliyun 镜像仓库 略 sh yum -y install perl gcc gcc-c++ make cmake kernel kernel-headers kernel-devel net-tools nano vim  远程挂在 Nas 磁盘 sh yum install cifs-utils -y  sh echo "mount -t cifs //{SMB服务器IP地址}/AppD...]]></summary></item><item><title><![CDATA[HTTP状态码对照表]]></title><description><![CDATA[HTTP response codes 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。 当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含 HTTP 状态码的信息头（server header）用以响应浏览器的请求。 HTTP 状态码的英文为 HTTP Status Code。 下面是常见的 HTTP 状态码： - 200 - 请求成功 - 301 - 资源（网页等）被...]]></description><link>https://zyao89.cn/posts/2020/07/20/http状态码对照表.html</link><guid isPermaLink="false">/posts/2020/07/20/http%E7%8A%B6%E6%80%81%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8.html</guid><category><![CDATA[网络]]></category><category><![CDATA[HTTP]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Mon, 20 Jul 2020 20:21:28 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[HTTP response codes 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。 当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含 HTTP 状态码的信息头（server header）用以响应浏览器的请求。 HTTP 状态码的英文为 HTTP Status Code。 下面是常见的 HTTP 状态码： - 200 - 请求成功 - 301 - 资源（网页等）被...]]></summary></item><item><title><![CDATA[ESXI6.7中直通挂载本地 SATA 硬盘]]></title><description><![CDATA[记录 USA 移动硬盘直通挂载及本地 SATA 硬盘直通挂载 首先你得熟悉命令行操作，知道如何使用终端管理工具，使用 SSH 或 ESXi 控制台进入 ESXi 的 Shell 界面。  两种方式： 设置界面 操作菜单 sh /etc/init.d/usbarbitrator stop  sh chkconfig usbarbitrator off  输入后结果 sh esxcli storage...]]></description><link>https://zyao89.cn/posts/2020/07/19/esxi6-7中直通挂载本地-sata-硬盘.html</link><guid isPermaLink="false">/posts/2020/07/19/esxi6-7%E4%B8%AD%E7%9B%B4%E9%80%9A%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0-sata-%E7%A1%AC%E7%9B%98.html</guid><category><![CDATA[其它]]></category><category><![CDATA[软路由]]></category><category><![CDATA[ESXI]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Sun, 19 Jul 2020 21:43:24 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[记录 USA 移动硬盘直通挂载及本地 SATA 硬盘直通挂载 首先你得熟悉命令行操作，知道如何使用终端管理工具，使用 SSH 或 ESXi 控制台进入 ESXi 的 Shell 界面。  两种方式： 设置界面 操作菜单 sh /etc/init.d/usbarbitrator stop  sh chkconfig usbarbitrator off  输入后结果 sh esxcli storage...]]></summary></item><item><title><![CDATA[使iptables重启后自动生效]]></title><description><![CDATA[ sh sudo apt-get install iptables-persistent  sh sudo netfilter-persistent save  sh sudo netfilter-persistent reload ...]]></description><link>https://zyao89.cn/posts/2020/06/05/使iptables重启后自动生效.html</link><guid isPermaLink="false">/posts/2020/06/05/%E4%BD%BFiptables%E9%87%8D%E5%90%AF%E5%90%8E%E8%87%AA%E5%8A%A8%E7%94%9F%E6%95%88.html</guid><category><![CDATA[网络]]></category><category><![CDATA[解决问题]]></category><category><![CDATA[Linux]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Fri, 05 Jun 2020 15:14:41 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ sh sudo apt-get install iptables-persistent  sh sudo netfilter-persistent save  sh sudo netfilter-persistent reload ...]]></summary></item><item><title><![CDATA[Docker基于pm2制作Python运行环境基础镜像]]></title><description><![CDATA[ 由于npm依赖中，node-gyp 编译需要依赖 python 环境，因此需要重新构建基础镜像。 依赖安装源 sources.list  deb http://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ stre...]]></description><link>https://zyao89.cn/posts/2020/05/13/docker基于pm2制作python运行环境基础镜像.html</link><guid isPermaLink="false">/posts/2020/05/13/docker%E5%9F%BA%E4%BA%8Epm2%E5%88%B6%E4%BD%9Cpython%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[Nodejs]]></category><category><![CDATA[Docker]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Wed, 13 May 2020 17:04:18 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 由于npm依赖中，node-gyp 编译需要依赖 python 环境，因此需要重新构建基础镜像。 依赖安装源 sources.list  deb http://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free deb http://mirrors.tuna.tsinghua.edu.cn/debian/ stre...]]></summary></item><item><title><![CDATA[Docker删除所有none镜像]]></title><description><![CDATA[ 在docker反复build后，会存留很多none镜像，下面命令一键删除所有none镜像 sh docker rmi -f docker images | grep "" | awk '{print $3}' ...]]></description><link>https://zyao89.cn/posts/2020/05/13/docker删除所有none镜像.html</link><guid isPermaLink="false">/posts/2020/05/13/docker%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89none%E9%95%9C%E5%83%8F.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[解决问题]]></category><category><![CDATA[Docker]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Wed, 13 May 2020 17:01:04 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 在docker反复build后，会存留很多none镜像，下面命令一键删除所有none镜像 sh docker rmi -f docker images | grep "" | awk '{print $3}' ...]]></summary></item><item><title><![CDATA[k8s批量删除Evicted Pods]]></title><description><![CDATA[ 查询pod状态 sh kubectl -n kube-system get pods | grep coredns | grep Evicted  查询结果为： sh coredns-67cb7b5f46-2crxg 0/1 Evicted 0 4h56m coredns-67cb7b5f46-2ds7n 0/1 Evicted 0 4h56m coredns-67cb7b5f46-2pzw5 ...]]></description><link>https://zyao89.cn/posts/2020/05/08/k8s批量删除evicted-pods.html</link><guid isPermaLink="false">/posts/2020/05/08/k8s%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4evicted-pods.html</guid><category><![CDATA[服务端]]></category><category><![CDATA[解决问题]]></category><category><![CDATA[Docker]]></category><category><![CDATA[K8S]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Fri, 08 May 2020 12:09:55 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 查询pod状态 sh kubectl -n kube-system get pods | grep coredns | grep Evicted  查询结果为： sh coredns-67cb7b5f46-2crxg 0/1 Evicted 0 4h56m coredns-67cb7b5f46-2ds7n 0/1 Evicted 0 4h56m coredns-67cb7b5f46-2pzw5 ...]]></summary></item><item><title><![CDATA[浏览器与Node的事件循环(Event Loop)]]></title><description><![CDATA[本文我们将会介绍 JS 实现异步的原理，并且了解了在浏览器和 Node 中 Event Loop 其实是不相同的。  JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。那么，为什么JavaScript不能有多个线程呢？这样能提高效率啊。 JavaScript的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定...]]></description><link>https://zyao89.cn/posts/2020/04/26/浏览器与node的事件循环-event-loop.html</link><guid isPermaLink="false">/posts/2020/04/26/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8Enode%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF-event-loop.html</guid><category><![CDATA[前端开发]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[优化]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Sun, 26 Apr 2020 10:29:53 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[本文我们将会介绍 JS 实现异步的原理，并且了解了在浏览器和 Node 中 Event Loop 其实是不相同的。  JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。那么，为什么JavaScript不能有多个线程呢？这样能提高效率啊。 JavaScript的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定...]]></summary></item><item><title><![CDATA[回流和重绘]]></title><description><![CDATA[ 本文先从浏览器的渲染过程来从头到尾的讲解一下回流重绘。 CSSOM 树和 DOM 树合并成渲染树，然后用于计算每个可见元素的布局，并输出给绘制流程，将像素渲染到屏幕上。 可参考：DOM树和CSSOM树对象模型构建 渲染过程 从上面这个图上，我们可以看到，浏览器渲染过程如下： 1. 解析HTML，生成 DOM 树，解析CSS，生成 CSSOM 树 2. 将 DOM 树和 CSSOM 树结合，生成渲...]]></description><link>https://zyao89.cn/posts/2020/04/26/回流和重绘.html</link><guid isPermaLink="false">/posts/2020/04/26/%E5%9B%9E%E6%B5%81%E5%92%8C%E9%87%8D%E7%BB%98.html</guid><category><![CDATA[前端开发]]></category><category><![CDATA[JavaScript]]></category><category><![CDATA[优化]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Sun, 26 Apr 2020 01:55:47 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 本文先从浏览器的渲染过程来从头到尾的讲解一下回流重绘。 CSSOM 树和 DOM 树合并成渲染树，然后用于计算每个可见元素的布局，并输出给绘制流程，将像素渲染到屏幕上。 可参考：DOM树和CSSOM树对象模型构建 渲染过程 从上面这个图上，我们可以看到，浏览器渲染过程如下： 1. 解析HTML，生成 DOM 树，解析CSS，生成 CSSOM 树 2. 将 DOM 树和 CSSOM 树结合，生成渲...]]></summary></item><item><title><![CDATA[全排列]]></title><description><![CDATA[ tip 难度 中等 给定一个 没有重复 数字的序列，返回其所有可能的全排列。 输入: js 1,2,3]  输出: js [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ]  > 以下解答为个人原创答案，非最优解。保证运行通过。 `js /*  @param {number[]} nums * @return {number[} */...]]></description><link>https://zyao89.cn/posts/2020/04/25/全排列.html</link><guid isPermaLink="false">/posts/2020/04/25/%E5%85%A8%E6%8E%92%E5%88%97.html</guid><category><![CDATA[算法]]></category><category><![CDATA[LeetCode]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Sat, 25 Apr 2020 22:35:11 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ tip 难度 中等 给定一个 没有重复 数字的序列，返回其所有可能的全排列。 输入: js 1,2,3]  输出: js [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ]  > 以下解答为个人原创答案，非最优解。保证运行通过。 `js /*  @param {number[]} nums * @return {number[} */...]]></summary></item><item><title><![CDATA[Z字形变换]]></title><description><![CDATA[ 将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 "LEETCODEISHIRING" 行数为 3 时，排列如下： L C I R E T O E S I I G E D H N 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："LCIRETOESIIGEDHN"。 请你实现这个将字符串进行指定行数变换的函数： tring convert...]]></description><link>https://zyao89.cn/posts/2020/04/21/z字形变换.html</link><guid isPermaLink="false">/posts/2020/04/21/z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2.html</guid><category><![CDATA[算法]]></category><category><![CDATA[LeetCode]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Tue, 21 Apr 2020 19:04:09 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ 将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 "LEETCODEISHIRING" 行数为 3 时，排列如下： L C I R E T O E S I I G E D H N 之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："LCIRETOESIIGEDHN"。 请你实现这个将字符串进行指定行数变换的函数： tring convert...]]></summary></item><item><title><![CDATA[字符串转换整数 (atoi)]]></title><description><![CDATA[ warning 难度 中等 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下： - 如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。 - 假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。 - 该字符...]]></description><link>https://zyao89.cn/posts/2020/04/21/字符串转换整数-atoi.html</link><guid isPermaLink="false">/posts/2020/04/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi.html</guid><category><![CDATA[算法]]></category><category><![CDATA[LeetCode]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Tue, 21 Apr 2020 00:15:09 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ warning 难度 中等 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下： - 如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。 - 假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。 - 该字符...]]></summary></item><item><title><![CDATA[整数反转]]></title><description><![CDATA[ tip 难度 简单 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 输入: 123 输出: 321 输入: -123 输出: -321 输入: 120 输出: 21 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231, 231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。 > 以下解答为个人原创答案，非最优解。保证运行通过。 j...]]></description><link>https://zyao89.cn/posts/2020/04/20/整数反转.html</link><guid isPermaLink="false">/posts/2020/04/20/%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC.html</guid><category><![CDATA[算法]]></category><category><![CDATA[LeetCode]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Mon, 20 Apr 2020 23:58:48 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ tip 难度 简单 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 输入: 123 输出: 321 输入: -123 输出: -321 输入: 120 输出: 21 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231, 231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。 > 以下解答为个人原创答案，非最优解。保证运行通过。 j...]]></summary></item><item><title><![CDATA[最长回文子串]]></title><description><![CDATA[ warning 难度 中等 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。 输入: "babad" 输出: "bab" 注意: "aba" 也是一个有效答案。 输入: "cbbd" 输出: "bb" > 以下解答为个人原创答案，非最优解。保证运行通过。 `js /*  @param {string} s * @return {string} */ var...]]></description><link>https://zyao89.cn/posts/2020/04/20/最长回文子串.html</link><guid isPermaLink="false">/posts/2020/04/20/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html</guid><category><![CDATA[算法]]></category><category><![CDATA[LeetCode]]></category><dc:creator><![CDATA[Zyao89]]></dc:creator><pubDate>Mon, 20 Apr 2020 23:16:16 GMT</pubDate><summary type="html" xml:base="https://zyao89.cn"><![CDATA[ warning 难度 中等 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。 输入: "babad" 输出: "bab" 注意: "aba" 也是一个有效答案。 输入: "cbbd" 输出: "bb" > 以下解答为个人原创答案，非最优解。保证运行通过。 `js /*  @param {string} s * @return {string} */ var...]]></summary></item></channel></rss>