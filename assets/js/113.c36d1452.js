(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{812:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("难度")]),t._v(" "),a("p",[t._v("中等")])]),t._v(" "),a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),a("p",[t._v("请你来实现一个 atoi 函数，使其能将字符串转换成整数。")]),t._v(" "),a("p",[t._v("首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。")]),t._v(" "),a("li",[t._v("假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。")]),t._v(" "),a("li",[t._v("该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。")])]),t._v(" "),a("p",[a("strong",[t._v("注意:")]),t._v(" 假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。")]),t._v(" "),a("p",[t._v("在任何情况下，若函数不能进行有效的转换时，请返回 0 。")]),t._v(" "),a("p",[a("strong",[t._v("提示:")])]),t._v(" "),a("ul",[a("li",[t._v("本题中的空白字符只包括空格字符 "),a("code",[t._v("' '")]),t._v(" 。")]),t._v(" "),a("li",[t._v("假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−2"),a("sup",[t._v("31")]),t._v(",  2"),a("sup",[t._v("31")]),t._v(" − 1]。如果数值超过这个范围，请返回  INT_MAX (2"),a("sup",[t._v("31")]),t._v(" − 1) 或 INT_MIN (−2"),a("sup",[t._v("31")]),t._v(") 。")])]),t._v(" "),a("h3",{attrs:{id:"示例-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-1"}},[t._v("#")]),t._v(" 示例 1")]),t._v(" "),a("p",[a("strong",[t._v("输入:")]),t._v(' "42"')]),t._v(" "),a("p",[a("strong",[t._v("输出:")]),t._v(" 42")]),t._v(" "),a("h3",{attrs:{id:"示例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[t._v("#")]),t._v(" 示例 2")]),t._v(" "),a("p",[a("strong",[t._v("输入:")]),t._v(' "   -42"')]),t._v(" "),a("p",[a("strong",[t._v("输出:")]),t._v(" -42")]),t._v(" "),a("p",[a("strong",[t._v("解释:")]),t._v(" 第一个非空白字符为 '-', 它是一个负号。")]),t._v(" "),a("p",[t._v("我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 -42 。")]),t._v(" "),a("h3",{attrs:{id:"示例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-3"}},[t._v("#")]),t._v(" 示例 3")]),t._v(" "),a("p",[a("strong",[t._v("输入:")]),t._v(' "4193 with words"')]),t._v(" "),a("p",[a("strong",[t._v("输出:")]),t._v(" 4193")]),t._v(" "),a("p",[a("strong",[t._v("解释:")]),t._v(" 转换截止于数字 '3' ，因为它的下一个字符不为数字。")]),t._v(" "),a("h3",{attrs:{id:"示例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-4"}},[t._v("#")]),t._v(" 示例 4")]),t._v(" "),a("p",[a("strong",[t._v("输入:")]),t._v(' "words and 987"')]),t._v(" "),a("p",[a("strong",[t._v("输出:")]),t._v(" 0")]),t._v(" "),a("p",[a("strong",[t._v("解释:")]),t._v(" 第一个非空字符是 'w', 但它不是数字或正、负号。")]),t._v(" "),a("p",[t._v("因此无法执行有效的转换。")]),t._v(" "),a("h3",{attrs:{id:"示例-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-5"}},[t._v("#")]),t._v(" 示例 5")]),t._v(" "),a("p",[a("strong",[t._v("输入:")]),t._v(' "-91283472332"')]),t._v(" "),a("p",[a("strong",[t._v("输出:")]),t._v(" -2147483648")]),t._v(" "),a("p",[a("strong",[t._v("解释:")]),t._v(' 数字 "-91283472332" 超过 32 位有符号整数范围。')]),t._v(" "),a("p",[t._v("因此返回 INT_MIN (-2"),a("sup",[t._v("31")]),t._v(") 。")]),t._v(" "),a("h2",{attrs:{id:"解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解答"}},[t._v("#")]),t._v(" 解答")]),t._v(" "),a("blockquote",[a("p",[t._v("以下解答为个人原创答案，非最优解。保证运行通过。")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"custom-style-wrapper window-controls"},[a("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",width:"54",height:"14",viewBox:"0 0 54 14"}},[a("g",{attrs:{fill:"none","fill-rule":"evenodd",transform:"translate(1 1)"}},[a("circle",{attrs:{cx:"6",cy:"6",r:"6",fill:"#FF5F56",stroke:"#E0443E","stroke-width":".5"}}),a("circle",{attrs:{cx:"26",cy:"6",r:"6",fill:"#FFBD2E",stroke:"#DEA123","stroke-width":".5"}}),a("circle",{attrs:{cx:"46",cy:"6",r:"6",fill:"#27C93F",stroke:"#1AAB29","stroke-width":".5"}})])])]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} str\n * @return {number}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myAtoi")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INT_MAX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INT_MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INT_MAX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里题目限制为 [−2^31^,  2^31^ − 1]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INT_MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INT_MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")]),a("CodeResult",{attrs:{lang:"js",code:"%2F**%0A%20*%20%40param%20%7Bstring%7D%20str%0A%20*%20%40return%20%7Bnumber%7D%0A%20*%2F%0Avar%20myAtoi%20%3D%20function(str)%20%7B%0A%20%20%20%20const%20num%20%3D%20parseInt(str)%3B%0A%20%20%20%20if%20(isNaN(num))%20return%200%3B%0A%20%20%20%20const%20INT_MAX%20%3D%20Math.pow(2%2C%2031)%3B%0A%20%20%20%20if%20(num%20%3E%3D%20INT_MAX)%20return%20(INT_MAX%20-%201)%3B%20%2F%2F%20%E8%BF%99%E9%87%8C%E9%A2%98%E7%9B%AE%E9%99%90%E5%88%B6%E4%B8%BA%20%5B%E2%88%922%5E31%5E%2C%C2%A0%202%5E31%5E%C2%A0%E2%88%92%201%5D%0A%20%20%20%20if%20(num%20%3C%20-INT_MAX)%20return%20-%20INT_MAX%3B%0A%20%20%20%20return%20num%3B%0A%7D%3B"}})],1),a("blockquote",[a("p",[t._v("链接："),a("a",{attrs:{href:"https://leetcode-cn.com/problems/string-to-integer-atoi",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://leetcode-cn.com/problems/string-to-integer-atoi"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);